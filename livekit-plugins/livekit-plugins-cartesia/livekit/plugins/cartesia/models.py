from typing import Literal

TTSEncoding = Literal[
    "pcm_s16le",
    # Not yet supported
    # "pcm_f32le",
    # "pcm_mulaw",
    # "pcm_alaw",
]

TTSModels = Literal["sonic", "sonic-2", "sonic-lite", "sonic-preview", "sonic-turbo", "sonic-3"]
TTSLanguages = Literal["en", "es", "fr", "de", "pt", "zh", "ja"]
TTSDefaultVoiceId = "f786b574-daa5-4673-aa0c-cbe3e8534c02"  # Katie - Friendly Fixer
TTSVoiceSpeed = Literal["fastest", "fast", "normal", "slow", "slowest"]

# up to date as of 2025-10-24, refer to https://docs.cartesia.ai/api-reference/tts/bytes#body-generation-config-emotion
TTSVoiceEmotion = Literal[
    "Happy",
    "Excited",
    "Enthusiastic",
    "Elated",
    "Euphoric",
    "Triumphant",
    "Amazed",
    "Surprised",
    "Flirtatious",
    "Joking/Comedic",
    "Curious",
    "Content",
    "Peaceful",
    "Serene",
    "Calm",
    "Grateful",
    "Affectionate",
    "Trust",
    "Sympathetic",
    "Anticipation",
    "Mysterious",
    "Angry",
    "Mad",
    "Outraged",
    "Frustrated",
    "Agitated",
    "Threatened",
    "Disgusted",
    "Contempt",
    "Envious",
    "Sarcastic",
    "Ironic",
    "Sad",
    "Dejected",
    "Melancholic",
    "Disappointed",
    "Hurt",
    "Guilty",
    "Bored",
    "Tired",
    "Rejected",
    "Nostalgic",
    "Wistful",
    "Apologetic",
    "Hesitant",
    "Insecure",
    "Confused",
    "Resigned",
    "Anxious",
    "Panicked",
    "Alarmed",
    "Scared",
    "Neutral",
    "Proud",
    "Confident",
    "Distant",
    "Skeptical",
    "Contemplative",
    "Determined",
]

# STT model definitions
STTEncoding = Literal["pcm_s16le",]

STTModels = Literal["ink-whisper"]
STTLanguages = Literal[
    "en",
    "de",
    "es",
    "fr",
    "ja",
    "pt",
    "zh",
    "hi",
    "ko",
    "it",
    "nl",
    "pl",
    "ru",
    "sv",
    "tr",
    "tl",
    "bg",
    "ro",
    "ar",
    "cs",
    "el",
    "fi",
    "hr",
    "ms",
    "sk",
    "da",
    "ta",
    "uk",
    "hu",
    "no",
    "vi",
    "bn",
    "th",
    "he",
    "ka",
    "id",
    "te",
    "gu",
    "kn",
    "ml",
    "mr",
    "or",
    "pa",
]


def _is_sonic_3(model: str) -> bool:
    return model.startswith("sonic-3")
