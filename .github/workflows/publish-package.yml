# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  workflow_call:
    inputs:
      package_name:
        required: true
        type: string
      package_module:
        required: true
        type: string
    secrets:
      PYPI_API_TOKEN:
        required: true
      DOCS_DEPLOY_AWS_ACCESS_KEY:
        required: true
      DOCS_DEPLOY_AWS_API_SECRET:
        required: true

permissions:
  contents: read

jobs:
  build:

    defaults:
      run:
        working-directory: ${{ inputs.package_name }}

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Build package
      run: python -m build

    - name: Store the distribution packages
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: ${{ inputs.package_name}}/dist/

  publish:

    needs:
    - build

    runs-on: ubuntu-latest

    steps:

    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

  docs:
    needs:
    - publish

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install pdoc 
      run: python -m pip install --upgrade pdoc

    - name: Install package
      run: python -m pip install ${{ inputs.package_name }}/

    - name: Build Docs
      run: python -m pdoc ${{ inputs.package_module }} --docformat=google --output-dir docs

    - name: S3 Upload
      run: aws s3 cp docs/ s3://livekit-docs/${{ inputs.package_name }} --recursive
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.DOCS_DEPLOY_AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.DOCS_DEPLOY_AWS_API_SECRET }}
        AWS_DEFAULT_REGION: "us-east-1"
